# Complete example of Tailscale-Envoy Gateway integration
# This example assumes Envoy Gateway is already installed
---
# First, create a namespace for our example
apiVersion: v1
kind: Namespace
metadata:
  name: tailscale-demo
---
# Create the Tailscale auth key secret
# Replace YOUR-KEY with your actual Tailscale auth key
apiVersion: v1
kind: Secret
metadata:
  name: tailscale-auth-key
  namespace: tailscale-gateway-system
type: Opaque
stringData:
  authkey: tskey-auth-YOUR-KEY-HERE
---
# Create the TailscaleGateway resource
apiVersion: tailscale.rajsinghtech.com/v1alpha1
kind: TailscaleGateway
metadata:
  name: demo-gateway
spec:
  gatewayClassName: tailscale-class
  authKey:
    name: tailscale-auth-key
    namespace: tailscale-gateway-system
    key: authkey
  envoyGatewayRef:
    name: eg
    namespace: envoy-gateway-system
  xdsServerConfig:
    namespace: tailscale-gateway-system
    replicas: 2
  tailscaleConfig:
    acceptDNS: true
    acceptRoutes: true
    advertiseRoutes:
    - "10.0.0.0/8"
---
# Example application to expose via Tailscale
apiVersion: v1
kind: Service
metadata:
  name: demo-app
  namespace: tailscale-demo
spec:
  selector:
    app: demo-app
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app
  namespace: tailscale-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
    spec:
      containers:
      - name: app
        image: hashicorp/http-echo:0.2.3
        args:
        - "-text=Hello from Tailscale!"
        - "-listen=:8080"
        ports:
        - containerPort: 8080
---
# Ingress proxy to expose the demo app to Tailscale
apiVersion: tailscale.rajsinghtech.com/v1alpha1
kind: TailscaleProxy
metadata:
  name: demo-app-ingress
  namespace: tailscale-demo
spec:
  type: ingress
  replicas: 2
  className: demo-gateway
  ingressConfig:
    hostname: demo-app
    services:
    - name: demo-app
      protocol: http
      port: 80
      targetPort: 80
      path: /
    useFunnel: false
  tags:
  - tag:k8s
  - tag:demo
---
# Example of accessing an external Tailscale service from the cluster
apiVersion: tailscale.rajsinghtech.com/v1alpha1
kind: TailscaleProxy
metadata:
  name: external-db-egress
  namespace: tailscale-demo
spec:
  type: egress
  replicas: 2
  className: demo-gateway
  egressConfig:
    services:
    # Replace with your actual Tailscale service
    - name: production-db
      tailscaleTarget: database.tail1234.ts.net
      port: 5432
      protocol: tcp
  tags:
  - tag:k8s
  - tag:demo
---
# Gateway API resources for integration with Envoy Gateway
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: tailscale-class
spec:
  controllerName: tailscale.rajsinghtech.com/gateway-controller
  parametersRef:
    group: tailscale.rajsinghtech.com
    kind: TailscaleGateway
    name: demo-gateway
---
# Gateway instance
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: tailscale-gateway
  namespace: tailscale-demo
spec:
  gatewayClassName: tailscale-class
  listeners:
  - name: http
    protocol: HTTP
    port: 80
---
# HTTPRoute for the demo app
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: demo-app-route
  namespace: tailscale-demo
spec:
  parentRefs:
  - name: tailscale-gateway
  hostnames:
  - "demo-app.tail1234.ts.net"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: demo-app
      port: 80
---
# EnvoyExtensionPolicy to enable Tailscale xDS integration
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyExtensionPolicy
metadata:
  name: tailscale-extension
  namespace: tailscale-demo
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: Gateway
    name: tailscale-gateway
  extProc:
  - name: tailscale-xds
    backendRef:
      name: demo-gateway-xds
      namespace: tailscale-gateway-system
      port: 8001
    processingMode:
      request:
        headerMode: SEND
      response:
        headerMode: SKIP